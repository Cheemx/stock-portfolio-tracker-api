// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: portfolio.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getPortfolioForUser = `-- name: GetPortfolioForUser :one
SELECT 
        SUM(holdings.total_invested)::DOUBLE PRECISION AS total_invested,
        SUM(holdings.quantity * stocks.current_price)::DOUBLE PRECISION AS current_value,
        COUNT(holdings.user_id) AS holdings_count
FROM holdings 
JOIN users
ON holdings.user_id = users.id
JOIN stocks 
ON holdings.stock_symbol = stocks.symbol
WHERE users.id = $1
GROUP BY holdings.user_id
`

type GetPortfolioForUserRow struct {
	TotalInvested float64 `json:"total_invested"`
	CurrentValue  float64 `json:"current_value"`
	HoldingsCount int64   `json:"holdings_count"`
}

func (q *Queries) GetPortfolioForUser(ctx context.Context, id uuid.UUID) (GetPortfolioForUserRow, error) {
	row := q.db.QueryRowContext(ctx, getPortfolioForUser, id)
	var i GetPortfolioForUserRow
	err := row.Scan(&i.TotalInvested, &i.CurrentValue, &i.HoldingsCount)
	return i, err
}
